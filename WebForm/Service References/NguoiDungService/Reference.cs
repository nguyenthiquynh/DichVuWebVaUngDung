//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebForm.NguoiDungService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NguoiDung", Namespace="http://schemas.datacontract.org/2004/07/WcfUngDungWeb")]
    [System.SerializableAttribute()]
    public partial class NguoiDung : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiaChiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatKhauField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuyenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoDienThoaiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenDangNhapField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiaChi {
            get {
                return this.DiaChiField;
            }
            set {
                if ((object.ReferenceEquals(this.DiaChiField, value) != true)) {
                    this.DiaChiField = value;
                    this.RaisePropertyChanged("DiaChi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatKhau {
            get {
                return this.MatKhauField;
            }
            set {
                if ((object.ReferenceEquals(this.MatKhauField, value) != true)) {
                    this.MatKhauField = value;
                    this.RaisePropertyChanged("MatKhau");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quyen {
            get {
                return this.QuyenField;
            }
            set {
                if ((this.QuyenField.Equals(value) != true)) {
                    this.QuyenField = value;
                    this.RaisePropertyChanged("Quyen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoDienThoai {
            get {
                return this.SoDienThoaiField;
            }
            set {
                if ((object.ReferenceEquals(this.SoDienThoaiField, value) != true)) {
                    this.SoDienThoaiField = value;
                    this.RaisePropertyChanged("SoDienThoai");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ten {
            get {
                return this.TenField;
            }
            set {
                if ((object.ReferenceEquals(this.TenField, value) != true)) {
                    this.TenField = value;
                    this.RaisePropertyChanged("Ten");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenDangNhap {
            get {
                return this.TenDangNhapField;
            }
            set {
                if ((object.ReferenceEquals(this.TenDangNhapField, value) != true)) {
                    this.TenDangNhapField = value;
                    this.RaisePropertyChanged("TenDangNhap");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NguoiDungService.INguoiDungService1")]
    public interface INguoiDungService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/listuser", ReplyAction="http://tempuri.org/INguoiDungService1/listuserResponse")]
        System.Collections.Generic.List<WebForm.NguoiDungService.NguoiDung> listuser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/listuser", ReplyAction="http://tempuri.org/INguoiDungService1/listuserResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WebForm.NguoiDungService.NguoiDung>> listuserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Register", ReplyAction="http://tempuri.org/INguoiDungService1/RegisterResponse")]
        bool Register(WebForm.NguoiDungService.NguoiDung u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Register", ReplyAction="http://tempuri.org/INguoiDungService1/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(WebForm.NguoiDungService.NguoiDung u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Authentication", ReplyAction="http://tempuri.org/INguoiDungService1/AuthenticationResponse")]
        WebForm.NguoiDungService.NguoiDung Authentication(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Authentication", ReplyAction="http://tempuri.org/INguoiDungService1/AuthenticationResponse")]
        System.Threading.Tasks.Task<WebForm.NguoiDungService.NguoiDung> AuthenticationAsync(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Searchuser", ReplyAction="http://tempuri.org/INguoiDungService1/SearchuserResponse")]
        WebForm.NguoiDungService.NguoiDung Searchuser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Searchuser", ReplyAction="http://tempuri.org/INguoiDungService1/SearchuserResponse")]
        System.Threading.Tasks.Task<WebForm.NguoiDungService.NguoiDung> SearchuserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Searchid", ReplyAction="http://tempuri.org/INguoiDungService1/SearchidResponse")]
        WebForm.NguoiDungService.NguoiDung Searchid(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Searchid", ReplyAction="http://tempuri.org/INguoiDungService1/SearchidResponse")]
        System.Threading.Tasks.Task<WebForm.NguoiDungService.NguoiDung> SearchidAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Create", ReplyAction="http://tempuri.org/INguoiDungService1/CreateResponse")]
        bool Create(WebForm.NguoiDungService.NguoiDung u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Create", ReplyAction="http://tempuri.org/INguoiDungService1/CreateResponse")]
        System.Threading.Tasks.Task<bool> CreateAsync(WebForm.NguoiDungService.NguoiDung u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Edit", ReplyAction="http://tempuri.org/INguoiDungService1/EditResponse")]
        bool Edit(WebForm.NguoiDungService.NguoiDung u, int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Edit", ReplyAction="http://tempuri.org/INguoiDungService1/EditResponse")]
        System.Threading.Tasks.Task<bool> EditAsync(WebForm.NguoiDungService.NguoiDung u, int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Delete", ReplyAction="http://tempuri.org/INguoiDungService1/DeleteResponse")]
        bool Delete(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Delete", ReplyAction="http://tempuri.org/INguoiDungService1/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Lock", ReplyAction="http://tempuri.org/INguoiDungService1/LockResponse")]
        bool Lock(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Lock", ReplyAction="http://tempuri.org/INguoiDungService1/LockResponse")]
        System.Threading.Tasks.Task<bool> LockAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Unlock", ReplyAction="http://tempuri.org/INguoiDungService1/UnlockResponse")]
        bool Unlock(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INguoiDungService1/Unlock", ReplyAction="http://tempuri.org/INguoiDungService1/UnlockResponse")]
        System.Threading.Tasks.Task<bool> UnlockAsync(int ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INguoiDungService1Channel : WebForm.NguoiDungService.INguoiDungService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NguoiDungService1Client : System.ServiceModel.ClientBase<WebForm.NguoiDungService.INguoiDungService1>, WebForm.NguoiDungService.INguoiDungService1 {
        
        public NguoiDungService1Client() {
        }
        
        public NguoiDungService1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NguoiDungService1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NguoiDungService1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NguoiDungService1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<WebForm.NguoiDungService.NguoiDung> listuser() {
            return base.Channel.listuser();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WebForm.NguoiDungService.NguoiDung>> listuserAsync() {
            return base.Channel.listuserAsync();
        }
        
        public bool Register(WebForm.NguoiDungService.NguoiDung u) {
            return base.Channel.Register(u);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(WebForm.NguoiDungService.NguoiDung u) {
            return base.Channel.RegisterAsync(u);
        }
        
        public WebForm.NguoiDungService.NguoiDung Authentication(string Username, string Password) {
            return base.Channel.Authentication(Username, Password);
        }
        
        public System.Threading.Tasks.Task<WebForm.NguoiDungService.NguoiDung> AuthenticationAsync(string Username, string Password) {
            return base.Channel.AuthenticationAsync(Username, Password);
        }
        
        public WebForm.NguoiDungService.NguoiDung Searchuser(string username) {
            return base.Channel.Searchuser(username);
        }
        
        public System.Threading.Tasks.Task<WebForm.NguoiDungService.NguoiDung> SearchuserAsync(string username) {
            return base.Channel.SearchuserAsync(username);
        }
        
        public WebForm.NguoiDungService.NguoiDung Searchid(int ID) {
            return base.Channel.Searchid(ID);
        }
        
        public System.Threading.Tasks.Task<WebForm.NguoiDungService.NguoiDung> SearchidAsync(int ID) {
            return base.Channel.SearchidAsync(ID);
        }
        
        public bool Create(WebForm.NguoiDungService.NguoiDung u) {
            return base.Channel.Create(u);
        }
        
        public System.Threading.Tasks.Task<bool> CreateAsync(WebForm.NguoiDungService.NguoiDung u) {
            return base.Channel.CreateAsync(u);
        }
        
        public bool Edit(WebForm.NguoiDungService.NguoiDung u, int ID) {
            return base.Channel.Edit(u, ID);
        }
        
        public System.Threading.Tasks.Task<bool> EditAsync(WebForm.NguoiDungService.NguoiDung u, int ID) {
            return base.Channel.EditAsync(u, ID);
        }
        
        public bool Delete(int ID) {
            return base.Channel.Delete(ID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(int ID) {
            return base.Channel.DeleteAsync(ID);
        }
        
        public bool Lock(int ID) {
            return base.Channel.Lock(ID);
        }
        
        public System.Threading.Tasks.Task<bool> LockAsync(int ID) {
            return base.Channel.LockAsync(ID);
        }
        
        public bool Unlock(int ID) {
            return base.Channel.Unlock(ID);
        }
        
        public System.Threading.Tasks.Task<bool> UnlockAsync(int ID) {
            return base.Channel.UnlockAsync(ID);
        }
    }
}
